From 1884a7a8c2a22234228cfc89b262d15ec2cc8f77 Mon Sep 17 00:00:00 2001
From: Bogdan Togorean <bogdan.togorean@analog.com>
Date: Fri, 21 May 2021 11:49:25 +0300
Subject: [PATCH 08/22] drivers: usb: gadget: Add XU control descriptor

Signed-off-by: Bogdan Togorean <bogdan.togorean@analog.com>
---
 drivers/usb/gadget/function/f_uvc.c        | 34 ++++++++++++++++------
 drivers/usb/gadget/function/u_uvc.h        |  5 ++--
 drivers/usb/gadget/function/uvc_configfs.c |  2 +-
 include/uapi/linux/usb/video.h             |  5 ++--
 4 files changed, 32 insertions(+), 14 deletions(-)

diff --git a/drivers/usb/gadget/function/f_uvc.c b/drivers/usb/gadget/function/f_uvc.c
index 44b4352a2676..c972b2b0060b 100644
--- a/drivers/usb/gadget/function/f_uvc.c
+++ b/drivers/usb/gadget/function/f_uvc.c
@@ -779,6 +779,7 @@ static struct usb_function_instance *uvc_alloc_inst(void)
 	struct f_uvc_opts *opts;
 	struct uvc_camera_terminal_descriptor *cd;
 	struct uvc_processing_unit_descriptor *pd;
+	struct uvc_extension_unit_descriptor *ed;
 	struct uvc_output_terminal_descriptor *od;
 	struct uvc_color_matching_descriptor *md;
 	struct uvc_descriptor_header **ctl_cls;
@@ -802,30 +803,43 @@ static struct usb_function_instance *uvc_alloc_inst(void)
 	cd->wObjectiveFocalLengthMax	= cpu_to_le16(0);
 	cd->wOcularFocalLength		= cpu_to_le16(0);
 	cd->bControlSize		= 3;
-	cd->bmControls[0]		= 2;
+	cd->bmControls[0]		= 0;
 	cd->bmControls[1]		= 0;
 	cd->bmControls[2]		= 0;
 
 	pd = &opts->uvc_processing;
-	pd->bLength			= UVC_DT_PROCESSING_UNIT_SIZE(2);
+	pd->bLength			= UVC_DT_PROCESSING_UNIT_SIZE(3);
 	pd->bDescriptorType		= USB_DT_CS_INTERFACE;
 	pd->bDescriptorSubType		= UVC_VC_PROCESSING_UNIT;
 	pd->bUnitID			= 2;
 	pd->bSourceID			= 1;
 	pd->wMaxMultiplier		= cpu_to_le16(16*1024);
 	pd->bControlSize		= 2;
-	pd->bmControls[0]		= 1;
+	pd->bmControls[0]		= 0;
 	pd->bmControls[1]		= 0;
 	pd->iProcessing			= 0;
+	pd->bmVideoStandards		= 0;
+
+	ed = &opts->uvc_extension;
+	ed->bLength			= UVC_DT_EXTENSION_UNIT_SIZE(1,1),
+	ed->bDescriptorType		= USB_DT_CS_INTERFACE,
+	ed->bDescriptorSubType		= UVC_VC_EXTENSION_UNIT,
+	ed->bUnitID			= 3,
+	ed->bNumControls		= 4,
+	ed->bNrInPins			= 1,
+	ed->baSourceID[0]		= 2,
+	ed->bControlSize		= 1,
+	ed->bmControls[0]		= 0x0F,
+	ed->iExtension			= 0x00,
 
 	od = &opts->uvc_output_terminal;
 	od->bLength			= UVC_DT_OUTPUT_TERMINAL_SIZE;
 	od->bDescriptorType		= USB_DT_CS_INTERFACE;
 	od->bDescriptorSubType		= UVC_VC_OUTPUT_TERMINAL;
-	od->bTerminalID			= 3;
+	od->bTerminalID			= 4;
 	od->wTerminalType		= cpu_to_le16(0x0101);
 	od->bAssocTerminal		= 0;
-	od->bSourceID			= 2;
+	od->bSourceID			= 3;
 	od->iTerminal			= 0;
 
 	md = &opts->uvc_color_matching;
@@ -841,8 +855,9 @@ static struct usb_function_instance *uvc_alloc_inst(void)
 	ctl_cls[0] = NULL;	/* assigned elsewhere by configfs */
 	ctl_cls[1] = (struct uvc_descriptor_header *)cd;
 	ctl_cls[2] = (struct uvc_descriptor_header *)pd;
-	ctl_cls[3] = (struct uvc_descriptor_header *)od;
-	ctl_cls[4] = NULL;	/* NULL-terminate */
+	ctl_cls[3] = (struct uvc_descriptor_header *)ed;
+	ctl_cls[4] = (struct uvc_descriptor_header *)od;
+	ctl_cls[5] = NULL;	/* NULL-terminate */
 	opts->fs_control =
 		(const struct uvc_descriptor_header * const *)ctl_cls;
 
@@ -851,8 +866,9 @@ static struct usb_function_instance *uvc_alloc_inst(void)
 	ctl_cls[0] = NULL;	/* assigned elsewhere by configfs */
 	ctl_cls[1] = (struct uvc_descriptor_header *)cd;
 	ctl_cls[2] = (struct uvc_descriptor_header *)pd;
-	ctl_cls[3] = (struct uvc_descriptor_header *)od;
-	ctl_cls[4] = NULL;	/* NULL-terminate */
+	ctl_cls[3] = (struct uvc_descriptor_header *)ed;
+	ctl_cls[4] = (struct uvc_descriptor_header *)od;
+	ctl_cls[5] = NULL;	/* NULL-terminate */
 	opts->ss_control =
 		(const struct uvc_descriptor_header * const *)ctl_cls;
 
diff --git a/drivers/usb/gadget/function/u_uvc.h b/drivers/usb/gadget/function/u_uvc.h
index 9a01a7d4f17f..933203788381 100644
--- a/drivers/usb/gadget/function/u_uvc.h
+++ b/drivers/usb/gadget/function/u_uvc.h
@@ -50,6 +50,7 @@ struct f_uvc_opts {
 	/* Default control descriptors for configfs-based gadgets. */
 	struct uvc_camera_terminal_descriptor		uvc_camera_terminal;
 	struct uvc_processing_unit_descriptor		uvc_processing;
+	struct uvc_extension_unit_descriptor		uvc_extension;
 	struct uvc_output_terminal_descriptor		uvc_output_terminal;
 	struct uvc_color_matching_descriptor		uvc_color_matching;
 
@@ -60,8 +61,8 @@ struct f_uvc_opts {
 	 * descriptors. Used by configfs only, must not be touched by legacy
 	 * gadgets.
 	 */
-	struct uvc_descriptor_header			*uvc_fs_control_cls[5];
-	struct uvc_descriptor_header			*uvc_ss_control_cls[5];
+	struct uvc_descriptor_header			*uvc_fs_control_cls[6];
+	struct uvc_descriptor_header			*uvc_ss_control_cls[6];
 
 	/*
 	 * Streaming descriptors for full-speed, high-speed and super-speed.
diff --git a/drivers/usb/gadget/function/uvc_configfs.c b/drivers/usb/gadget/function/uvc_configfs.c
index 00fb58e50a15..5dec2a126fd2 100644
--- a/drivers/usb/gadget/function/uvc_configfs.c
+++ b/drivers/usb/gadget/function/uvc_configfs.c
@@ -1039,7 +1039,7 @@ static struct config_item
 	INIT_LIST_HEAD(&h->formats);
 	h->desc.bDescriptorType		= USB_DT_CS_INTERFACE;
 	h->desc.bDescriptorSubType	= UVC_VS_INPUT_HEADER;
-	h->desc.bTerminalLink		= 3;
+	h->desc.bTerminalLink		= 4;
 	h->desc.bControlSize		= UVCG_STREAMING_CONTROL_SIZE;
 
 	config_item_init_type_name(&h->item, name, &uvcg_streaming_header_type);
diff --git a/include/uapi/linux/usb/video.h b/include/uapi/linux/usb/video.h
index d854cb19c42c..6687ebb7c312 100644
--- a/include/uapi/linux/usb/video.h
+++ b/include/uapi/linux/usb/video.h
@@ -302,6 +302,7 @@ struct uvc_processing_unit_descriptor {
 	__u8   bControlSize;
 	__u8   bmControls[2];
 	__u8   iProcessing;
+	__u8   bmVideoStandards;
 } __attribute__((__packed__));
 
 #define UVC_DT_PROCESSING_UNIT_SIZE(n)			(9+(n))
@@ -315,9 +316,9 @@ struct uvc_extension_unit_descriptor {
 	__u8  guidExtensionCode[16];
 	__u8  bNumControls;
 	__u8  bNrInPins;
-	__u8  baSourceID[0];
+	__u8  baSourceID[1];
 	__u8  bControlSize;
-	__u8  bmControls[0];
+	__u8  bmControls[1];
 	__u8  iExtension;
 } __attribute__((__packed__));
 
-- 
2.17.1

